% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/websocket.R
\name{WebsocketClient}
\alias{WebsocketClient}
\title{Create a websocket client}
\arguments{
\item{url}{The websocket URL.}

\item{onMessage}{A function called for each message received from the server.
Must take a single argument, the message content. If the message is text,
the \code{onMessage} function will be passed a one-element character vector;
if the message is binary, the \code{onMessage} function will be passed a raw
vector.}

\item{onOpen}{A function called with no arguments when the connection is
established.}

\item{onClose}{A function called with no arguments when either the client or
the server disconnect.}

\item{onFail}{A function called with no arguments when the connection fails
while the handshake is bring processed.}

\item{headers}{A named list or character vector representing keys and values
of headers in the initial HTTP request.}

\item{accessLogChannels}{A character vector of access log channels that should
  be enabled.  Defaults to \code{"none"}, which displays no normal, websocketpp logging activity.
  Setting \code{accessLogChannels = NULL} will use default websocketpp behavior.
  Multiple access logging levels may be passed in for them to be enabled.

  A few commonly used access logging values are:
  \describe{
    \item{\code{"all"}}{Special aggregate value representing "all levels"}
    \item{\code{"none"}}{Special aggregate value representing "no levels"}
    \item{\code{"rerror"}}{Recoverable error. Recovery may mean cleanly closing the connection
          with an appropriate error code to the remote endpoint.}
    \item{\code{"fatal"}}{Unrecoverable error. This error will trigger immediate unclean
          termination of the connection or endpoint.}
  }

  All logging levels are explained in more detail at \url{https://www.zaphoyd.com/websocketpp/manual/reference/logging}.}

\item{errorLogChannels}{A character vector of error log channels that should
  be displayed.  The default value is \code{NULL}, which will use default websocketpp behavior.
  Multiple error logging levels may be passed in for them to be enabled.

  A few commonly used error logging values are:
  \describe{
    \item{\code{"all"}}{Special aggregate value representing "all levels"}
    \item{\code{"none"}}{Special aggregate value representing "no levels"}
    \item{\code{"connect"}}{One line for each new connection that is opened}
    \item{\code{"disconnect"}}{One line for each new connection that is closed}
  }

  All logging levels are explained in more detail at \url{https://www.zaphoyd.com/websocketpp/manual/reference/logging}.}
}
\description{
Create a websocket client
}
\details{
A WebsocketClient object has the following methods:

\describe{
  \item{\code{send(msg)}}{Sends a message to the server.}
  \item{\code{close()}}{Closes the connection.}
  \item{\code{getState()}}{Returns a string representing the state of the
    connection. One of "INIT", "OPEN", "CLOSED", "FAILED".}
  \item{setAccessLogChannels(channels)}{Enable the websocket Access channels after the
    websocket's creation.  A value of \code{NULL} will not enable any new Access channels.}
  \item{setErrorLogChannels(channels)}{Enable the websocket Error channels after the
    websocket's creation.  A value of \code{NULL} will not enable any new Error channels.}
  \item{clearAccessLogChannels(channels)}{Disable the websocket Access channels after the
    websocket's creation.  A value of \code{NULL} will not clear any existing Access channels.}
  \item{clearErrorLogChannels(channels)}{Disable the websocket Error channels after the
    websocket's creation.  A value of \code{NULL} will not clear any existing Error channels.}
}
}
\section{Usage}{

\preformatted{WebsocketClient$new(url,
                     onMessage = function(msg) {},
                     onOpen = function() {},
                     onClose = function() {},
                     onFail = function() {},
                     headers = NULL,
                     accessLogChannels = c("none"),
                     errorLogChannels = NULL)
}
}

\examples{
## Only run this example in interactive R sessions
if (interactive()) {

# Create a websocket using the websocket.org test server
ws <- WebsocketClient$new("ws://echo.websocket.org/",
  onMessage = function(msg) {
    cat("Client got msg: ", msg, "\\n")
  },
  onClose = function() {
    cat("Client disconnected\\n")
  }
)

# Send a message
ws$send("hello")

# Close the websocket after we're done with it
ws$close()
}
}
